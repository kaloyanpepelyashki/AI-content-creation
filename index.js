require("dotenv").config();
const OpenAi = require("openai");
const apiKey = process.env.OPENAI_APIKEY;
const fs = require("fs");

const visualsGenerator = require("./visualsGenerator.js");
const scriptExtractor = require("./scriptExtractor.js");
const videoGenerator = require("./videoGenerator.js");

const openAi = new OpenAi({
  apiKey: apiKey,
});

const sanitizeContent = (dataToSanitize) => {
  try {
    console.log(`Data to sanitize : ${dataToSanitize}`);
    const newArray = dataToSanitize.split("(");

    function sanitize(element) {
      return element.replace(/\n/g, " ");
    }

    let sanitizedArray = newArray.map(sanitize);

    if (sanitizedArray.length > 1 && sanitizedArray != null) {
      return sanitizedArray;
    } else {
      console.log("sanitizedArray is empty");
      return null;
    }
  } catch (e) {
    console.log(`Error sanitizing content : ${e}`);
  }
};

const writeToFile = (content, purpose) => {
  const fileName = `Exports/finaltest/${purpose}.txt`;
  try {
    fs.writeFile(fileName, content, function (err) {
      if (err) {
        throw err;
      } else {
        console.log("Script saved to fle");
        return fileName;
      }
    });
  } catch (e) {
    console.log(`Error writing to file : ${e}`);
    return null;
  }
};

async function main() {
  let request;
  try {
    request = await openAi.chat.completions.create({
      messages: [
        {
          role: "system",
          content:
            "You are a highly creative and informed content strategist specializing in the electronics retail sector. Your primary goal is to generate short video ideas that are compelling, informative, and perfectly tailored to the interests of electronics enthusiasts and professionals. Emphasize innovation and creativity in your suggestions, ensuring each idea is visually engaging and suitable for AI-driven, no-face video formats. Your outputs should reflect an in-depth understanding of current trends in electronics, embedded systems, and software development.",
        },
        {
          role: "user",
          content: `Develop a series of compelling and innovative video ideas centered around electronics, electronics development, embedded systems, and software development. These ideas should be suitable for short-format videos designed for an AI-driven production process, where all aspects, from scripting to visuals, are generated by AI without human supervision. The video format should be no-face to emphasize the content and visuals.Consider the following guidelines: Target Audience Relevance: Tailor the video content to appeal directly to Ebits' target demographic, focusing on topics that resonate with enthusiasts and professionals in electronics and software development. Engaging and Informative Content: Ensure each video idea offers value, either by educating, informing, or entertaining the audience. The content should be easily digestible and suitable for a short video format, ideal for an Instagram campaign. AI-Generated Visuals: As the visuals will be created entirely by AI, suggest ideas that lend themselves to visually appealing and relevant imagery. This could include animated diagrams, infographics, or abstract representations of electronic concepts. Branding and Marketing Goals: Align the video ideas with Ebits' branding and marketing objectives. The content should be designed to enhance brand awareness, drive traffic to the webshop, and encourage community engagement.Maximizing Engagement Metrics: Focus on concepts that are likely to drive high engagement metrics such as views, likes, shares, and comments. Consider what's currently trending or has been historically popular in the electronics and software development communities.Provide a list of video ideas, each with a brief description that encapsulates the theme, potential visuals, and the intended impact on the viewer. Remember, the overarching goal is to increase brand interest and encourage visits to Ebits' webshop and online community,`,
        },
      ],
      model: "gpt-4",
    });

    writeToFile(request.choices[0].message.content, "IdeasNewPrompt");
    let sanitizedOutputFirst = sanitizeContent(
      request.choices[0].message.content
    );

    try {
      const requestSecond = await openAi.chat.completions
        .create({
          messages: [
            {
              role: "system",
              content:
                "You are a helpful content creation and video creation expert, you are also a very skilled script writer and a prompt engineer. You will assist a small company with a marketing campaign taking place on Instagram. The company that would benefit from the marketing campaign is a small electronics retailer based in Denmark. The company's primary goal is to attract more customers to their webshop and also to the community.",
            },
            {
              role: "user",
              content: `Create a script for a short-form video of 60 seconds on a randomly selected topic from ${sanitizedOutputFirst}. Begin with a captivating hook to immediately engage the viewer. Add a spice to the content, excite the user about the new things they are about to learn. The final product, composed by the script generated, must be exciting, interesting, captivating. The script should be structured in a series of scenes, each ending with a "|". For each scene, provide a concise yet engaging and descriptive script and a detailed description of the corresponding visuals.The visual descriptions must be enclosed between '[Visuals:' and ']', positioned before the script for each scene. These descriptions should be highly detailed, focusing on color schemes, shapes, and specific compositions to facilitate high-fidelity image generation by DALL-E. Provide more specific keywords to guide DALL-E 3 to produce precisely what is needed. Use descriptive adjectives in the prompt to help you achieve specificity. The style for the visuals is 'vector artwork'. Ensure that the visuals are descriptive, visually appealing, and directly relevant to the content of the scene. Adding layers to the description would significantly improve the response. Avoid suggesting visuals that contain elements DALL-E cannot interpret from the text alone. Always apply the formatting. Each scene should be distinct and formatted as follows:
              (Scene X: [Visuals: Describe the visuals in rich detail, emphasizing color, shape, and composition. Use descriptive adjectives in the prompt to help you achieve specificity. The visuals should complement the script] **Script: Provide a script segment that is engaging, descriptive, informative and captivating. Each script segment for each scene must reveal a unique part of the story told in the video.** | )
              Remember, the video is a no-face, short-video format, focusing on the narrative and AI-generated visuals to maintain viewer attention throughout`,
            },
          ],
          model: "gpt-4",
        })
        .then((response) => {
          if (
            response.choices[0].message.content != null &&
            response.choices[0].message.content.length > 0
          ) {
            const generatedContent = sanitizeContent(
              response.choices[0].message.content
            );
            // //For testing purposes
            // console.log(generatedContent);
            visualsGenerator(generatedContent);
            const script = scriptExtractor(generatedContent);

            videoGenerator(script);

            //Saves the generated raw script data to a file for testing purposes.
            writeToFile(
              response.choices[0].message.content,
              "ScriptAndVisuals"
            );
          } else {
            console.log("Generated content was empty");
          }
        })
        .catch((e) => {
          console.log("!!======!!");
          console.log(`Error involking the videoGenerator module : ${e}`);
        });
    } catch (e) {
      console.log("!!======!!");
      console.log(`Error generating content second iteration: ${e}`);
    }
  } catch (e) {
    console.log("!!======!!");
    console.log(`Error prompting : ${e}`);
  }
}

main();
